name: Publish to npm

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (leave empty for package.json version)'
        required: false
        default: ''

jobs:
  publish:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.1.0

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run linter
        run: pnpm run lint

      - name: Run tests
        run: pnpm run test
        continue-on-error: true

      - name: Build package
        run: pnpm run build

      - name: Update version (if specified)
        if: ${{ github.event.inputs.version != '' }}
        run: |
          npm version ${{ github.event.inputs.version }} --no-git-tag-version
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add package.json
          git commit -m "Update version to ${{ github.event.inputs.version }}" || exit 0

      - name: Publish to npm (Matrix run for Node 18 only)
        if: matrix.node-version == '18.x'
        run: pnpm publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release (if workflow_dispatch and Node 18)
        if: ${{ github.event_name == 'workflow_dispatch' && matrix.node-version == '18.x' }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.event.inputs.version || 'auto' }}
          release_name: Release v${{ github.event.inputs.version || 'auto' }}
          body: |
            Automated release of HashiCorp Vault N8N Node

            ## Changes
            - Updated HashiCorp Vault integration

            ## Installation
            ```bash
            npm install n8n-nodes-hashicorp-vault
            ```
          draft: false
          prerelease: false